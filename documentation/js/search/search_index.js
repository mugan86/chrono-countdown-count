var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/classes/CountDown.html",[0,0.465,1,0.863]],["body/classes/CountDown.html",[0,0.329,1,0.61,2,0.641,3,0.641,4,0.486,5,0.641,6,0.803,7,0.61,8,1.876,9,1.503,10,1.06,11,1.572,12,1.06,13,0.277,14,1.45,15,2.152,16,1.06,17,1.679,18,0.641,19,1.45,20,1.876,21,1.354,22,1.45,23,1.06,24,0.803,25,1.06,26,1.876,27,1.06,28,1.143,29,0.486,30,0.107,31,0.486,32,0.61,33,0.486,34,1.354,35,1.45,36,1.876,37,1.63,38,1.573,39,1.06,40,1.45,41,1.45,42,1.45,43,1.45,44,1.45,45,1.45,46,0.878,47,1.191,48,0.329,49,1.06,50,0.803,51,1.06,52,1.876,53,1.191,54,1.876,55,1.573,56,2.567,57,1.45,58,1.876,59,1.876,60,1.876,61,1.45,62,1.06,63,1.06,64,1.191,65,1.026,66,1.853,67,1.45,68,1.45,69,1.354,70,0.641,71,0.641,72,0.61,73,0.641,74,0.641,75,0.641,76,0.641,77,0.641,78,1.06,79,0.878,80,0.641,81,0.641,82,0.878,83,0.039,84,0.039]],["title/classes/Counter.html",[0,0.465,48,0.465]],["body/classes/Counter.html",[0,0.408,2,0.837,3,0.837,4,0.634,6,0.634,7,0.756,8,1.313,9,1.676,10,1.313,11,1.676,12,1.313,13,0.361,16,1.313,17,1.676,18,0.837,21,1.313,23,1.313,24,1.603,26,2.117,27,1.313,28,1.275,29,0.634,30,0.107,31,0.634,32,0.482,33,0.634,34,0.837,37,1.511,47,1.39,48,0.571,49,1.621,50,1.603,51,1.313,52,1.313,53,0.995,54,1.313,55,1.313,58,2.117,59,2.117,60,2.117,62,1.313,63,1.313,64,1.39,69,1.621,70,0.837,71,0.837,72,0.482,73,0.837,74,0.837,75,0.837,76,0.837,77,0.837,78,1.313,80,0.837,81,0.837,83,0.049,84,0.049,85,0.837,86,1.797,87,1.145,88,1.313,89,1.797,90,1.145,91,2.218,92,1.797,93,1.145,94,1.145,95,1.145]],["title/coverage.html",[96,2.009]],["body/coverage.html",[0,0.692,1,1.011,4,1.329,5,1.755,30,0.1,32,1.011,48,0.545,72,1.011,83,0.082,84,0.082,85,1.755,96,1.755,97,2.402,98,2.402,99,2.402,100,2.228,101,1.687,102,1.755,103,3.524,104,3.049,105,2.402,106,2.402,107,2.402,108,2.402,109,2.402]],["title/dependencies.html",[110,1.736,111,1.792]],["body/dependencies.html",[30,0.099,83,0.094,84,0.094,111,2.16,112,2.955,113,2.955]],["title/miscellaneous/enumerations.html",[114,0.731,115,1.792]],["body/miscellaneous/enumerations.html",[7,1.081,13,0.809,28,1.338,30,0.098,83,0.086,84,0.086,114,1.081,115,1.876,116,2.524,117,2.568,118,2.568,119,2.568,120,2.568,121,2.568,122,2.568,123,2.568,124,2.568,125,2.568,126,2.568,127,2.568,128,2.568]],["title/miscellaneous/functions.html",[101,1.357,114,0.731]],["body/miscellaneous/functions.html",[6,1.455,9,1.66,11,1.062,13,0.605,15,2.191,20,1.921,25,1.402,28,1.107,29,1.455,30,0.091,31,1.455,32,1.358,33,1.455,36,2.191,37,1.785,38,1.402,39,1.402,47,1.062,48,0.681,50,1.455,53,1.062,64,1.062,65,1.062,72,1.107,83,0.071,84,0.071,88,1.402,100,1.402,101,1.062,102,1.921,114,0.808,129,2.629,130,1.919,131,2.629,132,2.629,133,1.919,134,1.919,135,1.919,136,1.919,137,1.919,138,1.919,139,1.919,140,1.919,141,1.919,142,1.919,143,1.919]],["title/index.html",[13,0.547,17,0.961,144,1.736]],["body/index.html",[1,1.316,7,1.505,24,1.73,30,0.092,48,0.567,83,0.085,84,0.085,116,2.612,145,2.499,146,3.126,147,2.499,148,2.499,149,3.126,150,3.126,151,2.499,152,2.499,153,3.126]],["title/modules.html",[154,2.009]],["body/modules.html",[30,0.095,83,0.095,84,0.095,154,2.212]],["title/overview.html",[155,2.009]],["body/overview.html",[0,0.676,30,0.094,65,1.649,83,0.094,84,0.094,155,2.177]]],"invertedIndex":[["",{"_index":30,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":12,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["00:00:02",{"_index":68,"title":{},"body":{"classes/CountDown.html":{}}}],["00:00:03",{"_index":67,"title":{},"body":{"classes/CountDown.html":{}}}],["0d",{"_index":58,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["0h",{"_index":59,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["0m",{"_index":60,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["0s",{"_index":92,"title":{},"body":{"classes/Counter.html":{}}}],["1",{"_index":53,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"miscellaneous/functions.html":{}}}],["1/1",{"_index":104,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":103,"title":{},"body":{"coverage.html":{}}}],["1s",{"_index":63,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["2",{"_index":65,"title":{},"body":{"classes/CountDown.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["24",{"_index":124,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["2s",{"_index":62,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["3",{"_index":55,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["3/3",{"_index":106,"title":{},"body":{"coverage.html":{}}}],["3s",{"_index":61,"title":{},"body":{"classes/CountDown.html":{}}}],["4/4",{"_index":105,"title":{},"body":{"coverage.html":{}}}],["6.3.3",{"_index":113,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":127,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["asign",{"_index":26,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["boolean",{"_index":20,"title":{},"body":{"classes/CountDown.html":{},"miscellaneous/functions.html":{}}}],["chrono",{"_index":151,"title":{},"body":{"index.html":{}}}],["class",{"_index":0,"title":{"classes/CountDown.html":{},"classes/Counter.html":{}},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"coverage.html":{},"overview.html":{}}}],["clock",{"_index":38,"title":{},"body":{"classes/CountDown.html":{},"miscellaneous/functions.html":{}}}],["clockformat",{"_index":15,"title":{},"body":{"classes/CountDown.html":{},"miscellaneous/functions.html":{}}}],["console.log(this.valu",{"_index":79,"title":{},"body":{"classes/CountDown.html":{}}}],["constant",{"_index":119,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["constructor",{"_index":18,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["constructor(limitvalu",{"_index":86,"title":{},"body":{"classes/Counter.html":{}}}],["constructor(startvalu",{"_index":19,"title":{},"body":{"classes/CountDown.html":{}}}],["contruct",{"_index":23,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["convers",{"_index":120,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["convert",{"_index":73,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["correct",{"_index":136,"title":{},"body":{"miscellaneous/functions.html":{}}}],["count",{"_index":24,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"index.html":{}}}],["countdown",{"_index":1,"title":{"classes/CountDown.html":{}},"body":{"classes/CountDown.html":{},"coverage.html":{},"index.html":{}}}],["countdowntim",{"_index":145,"title":{},"body":{"index.html":{}}}],["counter",{"_index":48,"title":{"classes/Counter.html":{}},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["countlimit",{"_index":91,"title":{},"body":{"classes/Counter.html":{}}}],["courseintruct",{"_index":152,"title":{},"body":{"index.html":{}}}],["coverag",{"_index":96,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["d",{"_index":42,"title":{},"body":{"classes/CountDown.html":{}}}],["d/h/m/",{"_index":143,"title":{},"body":{"miscellaneous/functions.html":{}}}],["day_hour",{"_index":123,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["defin",{"_index":21,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["depend",{"_index":111,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["descript",{"_index":6,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"miscellaneous/functions.html":{}}}],["determin",{"_index":39,"title":{},"body":{"classes/CountDown.html":{},"miscellaneous/functions.html":{}}}],["digit",{"_index":132,"title":{},"body":{"miscellaneous/functions.html":{}}}],["discount",{"_index":8,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["document",{"_index":97,"title":{},"body":{"coverage.html":{}}}],["down",{"_index":25,"title":{},"body":{"classes/CountDown.html":{},"miscellaneous/functions.html":{}}}],["enumer",{"_index":115,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["exampl",{"_index":52,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["execut",{"_index":147,"title":{},"body":{"index.html":{}}}],["export",{"_index":76,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["fals",{"_index":57,"title":{},"body":{"classes/CountDown.html":{}}}],["file",{"_index":4,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"coverage.html":{}}}],["finish",{"_index":64,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"miscellaneous/functions.html":{}}}],["format",{"_index":36,"title":{},"body":{"classes/CountDown.html":{},"miscellaneous/functions.html":{}}}],["function",{"_index":101,"title":{"miscellaneous/functions.html":{}},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["get",{"_index":144,"title":{"index.html":{}},"body":{}}],["h",{"_index":43,"title":{},"body":{"classes/CountDown.html":{}}}],["hh:mm:ss",{"_index":41,"title":{},"body":{"classes/CountDown.html":{}}}],["identifi",{"_index":98,"title":{},"body":{"coverage.html":{}}}],["ignor",{"_index":77,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["import",{"_index":69,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["increment",{"_index":51,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":2,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["input",{"_index":134,"title":{},"body":{"miscellaneous/functions.html":{}}}],["instal",{"_index":149,"title":{},"body":{"index.html":{}}}],["instruct",{"_index":148,"title":{},"body":{"index.html":{}}}],["interv",{"_index":70,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["interval(1000).pip",{"_index":80,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["intruct",{"_index":153,"title":{},"body":{"index.html":{}}}],["lib/.../constants.t",{"_index":117,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lib/.../converter.t",{"_index":129,"title":{},"body":{"miscellaneous/functions.html":{}}}],["lib/constants.t",{"_index":118,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lib/converter.t",{"_index":100,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["lib/countdown.t",{"_index":5,"title":{},"body":{"classes/CountDown.html":{},"coverage.html":{}}}],["lib/countdown.ts:16",{"_index":22,"title":{},"body":{"classes/CountDown.html":{}}}],["lib/countdown.ts:45",{"_index":46,"title":{},"body":{"classes/CountDown.html":{}}}],["lib/counter.t",{"_index":85,"title":{},"body":{"classes/Counter.html":{},"coverage.html":{}}}],["lib/counter.ts:11",{"_index":87,"title":{},"body":{"classes/Counter.html":{}}}],["lib/counter.ts:30",{"_index":90,"title":{},"body":{"classes/Counter.html":{}}}],["librari",{"_index":146,"title":{},"body":{"index.html":{}}}],["limit",{"_index":50,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"miscellaneous/functions.html":{}}}],["limitvalu",{"_index":89,"title":{},"body":{"classes/Counter.html":{}}}],["m",{"_index":44,"title":{},"body":{"classes/CountDown.html":{}}}],["map",{"_index":74,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["map((x",{"_index":81,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["match",{"_index":84,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["max",{"_index":27,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["method",{"_index":16,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["miscellan",{"_index":114,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["modul",{"_index":154,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["moment",{"_index":141,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ms_per_day",{"_index":128,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["n",{"_index":133,"title":{},"body":{"miscellaneous/functions.html":{}}}],["name",{"_index":31,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"miscellaneous/functions.html":{}}}],["new",{"_index":107,"title":{},"body":{"coverage.html":{}}}],["npm",{"_index":150,"title":{},"body":{"index.html":{}}}],["number",{"_index":9,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"miscellaneous/functions.html":{}}}],["numberformatclock",{"_index":102,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["numberformatclock(n",{"_index":130,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ok",{"_index":94,"title":{},"body":{"classes/Counter.html":{}}}],["one_day_second",{"_index":125,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["one_hour_second",{"_index":122,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["one_min_second",{"_index":126,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["oper",{"_index":121,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["option",{"_index":33,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"miscellaneous/functions.html":{}}}],["output",{"_index":35,"title":{},"body":{"classes/CountDown.html":{}}}],["overview",{"_index":155,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":110,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":78,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["paramet",{"_index":29,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"miscellaneous/functions.html":{}}}],["properti",{"_index":14,"title":{},"body":{"classes/CountDown.html":{}}}],["result",{"_index":83,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":37,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"miscellaneous/functions.html":{}}}],["rxj",{"_index":112,"title":{},"body":{"dependencies.html":{}}}],["rxjs/internal/observable/interv",{"_index":71,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["rxjs/internal/operators/map",{"_index":75,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["s",{"_index":45,"title":{},"body":{"classes/CountDown.html":{}}}],["second",{"_index":47,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"miscellaneous/functions.html":{}}}],["secondsintimeformat",{"_index":72,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["secondsintimeformat(timeinsecond",{"_index":135,"title":{},"body":{"miscellaneous/functions.html":{}}}],["secondsintimeformat(x",{"_index":95,"title":{},"body":{"classes/Counter.html":{}}}],["select",{"_index":137,"title":{},"body":{"miscellaneous/functions.html":{}}}],["set",{"_index":93,"title":{},"body":{"classes/Counter.html":{}}}],["show",{"_index":40,"title":{},"body":{"classes/CountDown.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["specif",{"_index":10,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["specifi",{"_index":139,"title":{},"body":{"miscellaneous/functions.html":{}}}],["start",{"_index":17,"title":{"index.html":{}},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["startvalu",{"_index":34,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["statement",{"_index":99,"title":{},"body":{"coverage.html":{}}}],["tabl",{"_index":109,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":108,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":142,"title":{},"body":{"miscellaneous/functions.html":{}}}],["this.clockformat",{"_index":56,"title":{},"body":{"classes/CountDown.html":{}}}],["this.valu",{"_index":54,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["time",{"_index":11,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"miscellaneous/functions.html":{}}}],["timeinsecond",{"_index":138,"title":{},"body":{"miscellaneous/functions.html":{}}}],["timer",{"_index":116,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["total",{"_index":140,"title":{},"body":{"miscellaneous/functions.html":{}}}],["true",{"_index":66,"title":{},"body":{"classes/CountDown.html":{}}}],["two",{"_index":131,"title":{},"body":{"miscellaneous/functions.html":{}}}],["type",{"_index":32,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["until",{"_index":49,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["up",{"_index":88,"title":{},"body":{"classes/Counter.html":{},"miscellaneous/functions.html":{}}}],["us",{"_index":7,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["valu",{"_index":28,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["x",{"_index":82,"title":{},"body":{"classes/CountDown.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/CountDown.html":{"url":"classes/CountDown.html","title":"class - CountDown","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CountDown\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/countdown.ts\n        \n\n            \n                Description\n            \n            \n                Use to discount number, from specific time to 0.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clockFormat\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                start\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(startValue: number, clockFormat: boolean)\n                    \n                \n                        \n                            \n                                Defined in lib/countdown.ts:16\n                            \n                        \n\n                \n                    \n                            Contruct count down and asign start max value to start discount\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        startValue\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Asign value to start discount time\n\n                                                        \n                                                \n                                                \n                                                        clockFormat\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                output format. Return with clock format or no\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clockFormat\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clockFormat:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in lib/countdown.ts:16\n                            \n                        \n\n                \n                    \n                        Determine if show with clock format (HH:MM:SS or d h m s)\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            start\n                            \n                            \n                        \n                    \n                \n                \n                    \nstart()\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/countdown.ts:45\n                            \n                        \n\n\n                \n                    \n                            Time seconds counter until asign limit. Increment time values by second\n\n\n                            \n                                    Example :\n                                        \n                                            1 EXAMPLE\nthis.value = 3.\nthis.clockFormat = false\nReturn:\n0d 0h 0m 3s\n0d 0h 0m 2s\n0d 0h 0m 1s\nFINISH\n2 EXAMPLE\nthis.value = 3.\nthis.clockFormat = true\nReturn:\n00:00:03\n00:00:02\nFINISH\n                                        \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { interval } from \"rxjs/internal/observable/interval\";\nimport { secondsInTimeFormat } from \"./converter\";\nimport { map } from \"rxjs/internal/operators/map\";\n\n/**\n * Use to discount number, from specific time to 0.\n */\nexport class CountDown {\n    /**\n     * @ignore\n     */\n    value: number = -1;\n    /**\n     * Determine if show with clock format (HH:MM:SS or d h m s)\n     */\n    clockFormat: boolean;\n    /**\n     * Contruct count down and asign start max value to start discount\n     * @param startValue Asign value to start discount time\n     * @param clockFormat output format. Return with clock format or no\n     */\n    constructor(startValue: number, clockFormat: boolean = true) {\n        this.value = startValue;\n        this.clockFormat = clockFormat;\n    }\n    /**\n     * Time seconds counter until asign limit. Increment time values by second\n     * @example\n     * 1 EXAMPLE\n     * this.value = 3.\n     * this.clockFormat = false\n     * Return:\n     * 0d 0h 0m 3s\n     * 0d 0h 0m 2s\n     * 0d 0h 0m 1s\n     * FINISH\n     * 2 EXAMPLE\n     * this.value = 3.\n     * this.clockFormat = true\n     * Return:\n     * 00:00:03\n     * 00:00:02\n     * FINISH\n     */\n    start() {\n        console.log(this.value);\n        return interval(1000).pipe(\n            map((x: number) => {\n                return secondsInTimeFormat( this.value - x , 2, 1, this.clockFormat);\n            })\n        );\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Counter.html":{"url":"classes/Counter.html","title":"class - Counter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Counter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/counter.ts\n        \n\n            \n                Description\n            \n            \n                Use to discount number, from specific time to 0.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                start\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(limitValue: number)\n                    \n                \n                        \n                            \n                                Defined in lib/counter.ts:11\n                            \n                        \n\n                \n                    \n                            Contruct count up and asign finish limit max value to start count\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        limitValue\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            start\n                            \n                            \n                        \n                    \n                \n                \n                    \nstart()\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/counter.ts:30\n                            \n                        \n\n\n                \n                    \n                            Time seconds counter until asign limit. Increment time values by second\n\n\n                            \n                                    Example :\n                                        \n                                            countLimit = 3.\nReturn:\n0d 0h 0m 0s\n0d 0h 0m 1s\n0d 0h 0m 2s\nFINISH\n                                        \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { interval } from 'rxjs/internal/observable/interval';\nimport { map } from 'rxjs/internal/operators/map';\nimport { secondsInTimeFormat } from './converter';\n/**\n * Use to discount number, from specific time to 0.\n */\nexport class Counter {\n    /**\n     * @ignore\n     */\n    value: number = -1;\n    /**\n     * Contruct count up and asign finish limit max value to start count\n     * @param startValue Asign value to set limit value and ok to start count time\n     */\n    constructor(limitValue: number) {\n        this.value = limitValue;\n    }\n    /**\n     * Time seconds counter until asign limit. Increment time values by second\n     * @example\n     * countLimit = 3.\n     * Return:\n     * 0d 0h 0m 0s\n     * 0d 0h 0m 1s\n     * 0d 0h 0m 2s\n     * FINISH\n     * @param countLimit Count only to until asign limit\n     */\n    start() {\n        return interval(1000).pipe(\n            map((x: number) => {\n                return secondsInTimeFormat(x, 1, this.value);\n            })\n        );\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                lib/converter.ts\n            \n            \n                function\n            \n            \n                numberFormatClock\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/converter.ts\n            \n            \n                function\n            \n            \n                secondsInTimeFormat\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/countdown.ts\n            \n            \n                class\n            \n            \n                CountDown\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                lib/counter.ts\n            \n            \n                class\n            \n            \n                Counter\n            \n            \n                100 %\n                (3/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            rxjs : ^6.3.3\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Timer   (lib/.../constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    lib/constants.ts\n    \n        \n            \n                \n                    \n                        \n                        Timer\n                    \n                \n                    \n                        \n                            Timer constants to use in conversion and other operations\n\n                        \n                    \n                        \n                            \n                                 ONE_HOUR_SECONDS\n                            \n                        \n                        \n                            \n                                 DAY_HOURS\n                            \n                        \n                        \n                            \n                                Value : 24\n                            \n                        \n                        \n                            \n                                 ONE_DAY_SECONDS\n                            \n                        \n                        \n                            \n                                 ONE_MIN_SECONDS\n                            \n                        \n                        \n                            \n                                Value : 60\n                            \n                        \n                        \n                            \n                                 MS_PER_DAY\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            numberFormatClock   (lib/.../converter.ts)\n                        \n                        \n                            secondsInTimeFormat   (lib/.../converter.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    lib/converter.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            numberFormatClock\n                            \n                            \n                        \n                    \n                \n                \n                    \nnumberFormatClock(n)\n                    \n                \n\n\n\n\n                \n                    \n                            Return value with two digits. If value is \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        n\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Input number to return with two digits\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            secondsInTimeFormat\n                            \n                            \n                        \n                    \n                \n                \n                    \nsecondsInTimeFormat(timeInSeconds, type, limit, clockFormat: boolean)\n                    \n                \n\n\n\n\n                \n                    \n                            Return in correct format to select clockFormat or no\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        timeInSeconds\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                time in number format to specify total seconds in this moment\n\n                                                        \n                                                \n                                                \n                                                        type\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                counter type - 1: Counter Up / 2: Counter Down\n\n                                                        \n                                                \n                                                \n                                                        limit\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Finish number\n\n                                                        \n                                                \n                                                \n                                                        clockFormat\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Determine if return format take clock or d/h/m/s\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCounter / CountdownTimer Library\nThis library use to execute count timer and countdown timer.\nInstructions to install\nnpm install chrono-npm-courseIntructions to use\nIntructions to use Count Timer\nIntructions to use Countdown Timer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
