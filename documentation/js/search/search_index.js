var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/classes/CountDown.html",[0,0.573,1,0.973]],["body/classes/CountDown.html",[0,0.474,1,0.805,2,0.648,3,0.839,4,0.506,5,0.839,6,1.031,7,0.624,8,1.701,9,1.955,10,1.334,11,1.851,12,1.334,13,0.392,14,1.334,15,1.907,16,1.334,17,1.445,18,0.839,19,1.794,20,1.701,21,1.661,22,1.794,23,1.334,24,0.805,25,1.334,26,2.201,27,1.334,28,1.445,29,1.031,30,0.098,31,1.031,32,1.002,33,1.031,34,1.661,35,1.334,36,1.328,37,1.907,38,1.142,39,1.031,40,1.334,41,1.334,42,1.334,43,1.334,44,1.334,45,1.334,46,1.334,47,1.128,48,1.463,49,0.474,50,1.334,51,0.805,52,1.334,53,0.839,54,0.839,55,1.334,56,2.201,57,1.463,58,2.201,59,1.893,60,2.201,61,1.334,62,1.701,63,1.701,64,1.701,65,1.334,66,1.031,67,1.031,68,1.142,69,1.284,70,1.284,71,1.334,72,1.334,73,1.893,74,0.506,75,0.648,76,0.839,77,0.839,78,0.805,79,0.839,80,0.839,81,0.839,82,0.839,83,0.839,84,1.334,85,0.839,86,0.839,87,1.128,88,0.042,89,0.042]],["title/classes/Counter.html",[0,0.573,49,0.573]],["body/classes/Counter.html",[0,0.505,2,0.703,3,0.909,4,0.548,6,1.099,7,0.665,8,1.099,9,2.002,10,1.422,11,1.84,12,1.422,13,0.425,14,1.422,15,1.957,16,1.422,17,1.296,18,0.909,20,1.761,21,1.751,23,1.422,24,1.374,26,2.278,27,1.422,28,1.486,29,1.099,30,0.098,31,1.099,32,1.056,33,1.099,34,0.909,35,1.422,36,1.374,37,1.84,38,1.194,39,1.099,40,1.422,41,1.422,42,1.422,43,1.422,44,1.422,45,1.422,46,1.422,48,1.53,49,0.703,50,1.751,51,1.374,52,1.422,53,0.909,54,0.909,55,1.422,56,1.422,57,1.099,58,1.422,59,1.422,60,1.422,62,1.761,63,1.761,64,1.761,66,1.099,67,1.099,68,1.194,70,0.703,73,1.98,74,0.548,75,0.703,76,0.909,77,0.909,78,0.548,79,0.909,80,0.909,81,0.909,82,0.909,83,0.909,84,1.751,85,0.909,86,0.909,88,0.045,89,0.045,90,0.909,91,1.912,92,1.912,93,1.422,94,1.912,95,1.222,96,2.354,97,1.422,98,1.222,99,1.222,100,1.222]],["title/coverage.html",[101,2.159]],["body/coverage.html",[0,0.871,1,1.187,4,1.187,5,1.967,30,0.094,32,1.187,49,0.698,78,1.187,88,0.077,89,0.077,90,1.967,101,1.967,102,1.52,103,2.645,104,2.645,105,2.674,106,2.067,107,1.967,108,3.874,109,3.596,110,1.967,111,3.299,112,1.967,113,2.645,114,2.645]],["title/dependencies.html",[115,1.37,116,1.929]],["body/dependencies.html",[30,0.091,88,0.086,89,0.086,116,2.363,117,3.178,118,3.178]],["title/miscellaneous/enumerations.html",[119,0.826,120,1.929]],["body/miscellaneous/enumerations.html",[7,0.976,13,0.976,28,1.656,30,0.092,74,1.656,75,1.613,88,0.08,89,0.08,119,1.259,120,2.087,121,2.806,122,2.806,123,2.806,124,2.806,125,2.806,126,2.806,127,2.806,128,2.806,129,2.806,130,2.806,131,2.806,132,2.806,133,2.806]],["title/miscellaneous/functions.html",[106,1.491,119,0.826]],["body/miscellaneous/functions.html",[6,1.791,8,1.134,9,2.025,11,1.564,13,0.687,15,1.791,20,1.564,24,0.886,25,2.024,28,1.221,29,1.791,30,0.087,31,1.791,32,1.674,33,1.791,36,1.507,37,1.93,38,0.886,39,1.134,48,1.564,49,0.986,51,1.507,57,1.564,68,1.398,69,1.564,78,1.221,88,0.064,89,0.064,93,2.024,105,1.468,106,1.134,107,2.024,110,2.024,119,0.886,134,3.116,135,1.974,136,1.974,137,1.974,138,2.722,139,2.722,140,2.722,141,2.722,142,1.974,143,2.722,144,2.722,145,1.974,146,1.974,147,1.974,148,1.974,149,1.974,150,1.974,151,1.974]],["title/index.html",[13,0.641,17,0.826,152,1.37]],["body/index.html",[1,1.207,2,0.873,7,1.036,24,1.336,30,0.099,36,1.336,38,1.336,49,0.88,61,1.677,62,1.916,63,1.916,64,1.916,65,1.129,66,1.296,67,1.296,68,1.549,70,1.296,71,1.129,72,1.677,74,1.428,88,0.078,89,0.053,97,1.129,102,0.873,112,2.215,115,1.129,153,1.518,154,2.255,155,1.518,156,1.518,157,1.518,158,2.255,159,1.518,160,2.691,161,1.518,162,2.255,163,1.518,164,1.518,165,1.518,166,3.547,167,2.255,168,2.255,169,1.518,170,2.255,171,2.978,172,2.255,173,2.255,174,2.978,175,2.978,176,2.978,177,2.978,178,1.518,179,2.255,180,1.518,181,1.518,182,1.518,183,1.518,184,1.518,185,1.518]],["title/license.html",[17,0.826,152,1.37,186,1.37]],["body/license.html",[4,0.939,7,0.986,30,0.066,51,1.271,88,0.066,89,0.066,102,1.203,186,1.557,187,2.094,188,3.212,189,2.094,190,2.094,191,2.094,192,2.094,193,2.094,194,2.834,195,2.094,196,2.094,197,2.094,198,2.094,199,2.834,200,2.094,201,3.442,202,3.908,203,2.094,204,2.834,205,3.212,206,2.094,207,3.212,208,2.094,209,2.094,210,2.094,211,2.094,212,2.094,213,2.094,214,2.094,215,2.094,216,2.094,217,2.094,218,2.094,219,2.094,220,2.094,221,2.094,222,2.834,223,2.834,224,2.094,225,2.094,226,2.094,227,2.834,228,2.094,229,2.094,230,2.094,231,2.094,232,2.094,233,2.094,234,2.094,235,2.094,236,2.094,237,2.094,238,2.094,239,2.094,240,2.094,241,2.094,242,2.094,243,2.094,244,2.094,245,2.094,246,2.094,247,2.094,248,2.094,249,2.094,250,2.094]],["title/modules.html",[251,2.159]],["body/modules.html",[30,0.087,88,0.087,89,0.087,251,2.405]],["title/overview.html",[252,2.159]],["body/overview.html",[0,0.844,30,0.086,69,1.837,88,0.086,89,0.086,252,2.377]]],"invertedIndex":[["",{"_index":30,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":12,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["00:00:00",{"_index":178,"title":{},"body":{"index.html":{}}}],["00:00:01",{"_index":179,"title":{},"body":{"index.html":{}}}],["00:00:02",{"_index":72,"title":{},"body":{"classes/CountDown.html":{},"index.html":{}}}],["00:00:03",{"_index":71,"title":{},"body":{"classes/CountDown.html":{},"index.html":{}}}],["0d",{"_index":62,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"index.html":{}}}],["0h",{"_index":63,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"index.html":{}}}],["0m",{"_index":64,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"index.html":{}}}],["0s",{"_index":97,"title":{},"body":{"classes/Counter.html":{},"index.html":{}}}],["1",{"_index":57,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"miscellaneous/functions.html":{}}}],["1/1",{"_index":109,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":108,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":133,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["1s",{"_index":67,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"index.html":{}}}],["2",{"_index":69,"title":{},"body":{"classes/CountDown.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["2018",{"_index":190,"title":{},"body":{"license.html":{}}}],["24",{"_index":127,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["2s",{"_index":66,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"index.html":{}}}],["3",{"_index":59,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["3s",{"_index":65,"title":{},"body":{"classes/CountDown.html":{},"index.html":{}}}],["4/4",{"_index":111,"title":{},"body":{"coverage.html":{}}}],["6.3.3",{"_index":118,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":129,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["abov",{"_index":221,"title":{},"body":{"license.html":{}}}],["action",{"_index":244,"title":{},"body":{"license.html":{}}}],["anartz",{"_index":191,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":214,"title":{},"body":{"license.html":{}}}],["aris",{"_index":248,"title":{},"body":{"license.html":{}}}],["arriv",{"_index":137,"title":{},"body":{"miscellaneous/functions.html":{}}}],["asign",{"_index":26,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["associ",{"_index":203,"title":{},"body":{"license.html":{}}}],["author",{"_index":237,"title":{},"body":{"license.html":{}}}],["boolean",{"_index":20,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"miscellaneous/functions.html":{}}}],["c",{"_index":189,"title":{},"body":{"license.html":{}}}],["charg",{"_index":198,"title":{},"body":{"license.html":{}}}],["check",{"_index":136,"title":{},"body":{"miscellaneous/functions.html":{}}}],["checktimerfinish",{"_index":107,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["checktimerfinish(timeinsecond",{"_index":135,"title":{},"body":{"miscellaneous/functions.html":{}}}],["chrono",{"_index":167,"title":{},"body":{"index.html":{}}}],["chrono.count",{"_index":169,"title":{},"body":{"index.html":{}}}],["chrono.countdown",{"_index":181,"title":{},"body":{"index.html":{}}}],["chronomet",{"_index":160,"title":{},"body":{"index.html":{}}}],["chronometer.firebaseapp.com",{"_index":157,"title":{},"body":{"index.html":{}}}],["chronometerintruct",{"_index":164,"title":{},"body":{"index.html":{}}}],["claim",{"_index":240,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/CountDown.html":{},"classes/Counter.html":{}},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"coverage.html":{},"overview.html":{}}}],["clock",{"_index":38,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["clockformat",{"_index":15,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"miscellaneous/functions.html":{}}}],["condit",{"_index":220,"title":{},"body":{"license.html":{}}}],["connect",{"_index":250,"title":{},"body":{"license.html":{}}}],["console.log(data",{"_index":174,"title":{},"body":{"index.html":{}}}],["const",{"_index":166,"title":{},"body":{"index.html":{}}}],["constant",{"_index":75,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"miscellaneous/enumerations.html":{}}}],["constructor",{"_index":18,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["constructor(limitvalu",{"_index":91,"title":{},"body":{"classes/Counter.html":{}}}],["constructor(startvalu",{"_index":19,"title":{},"body":{"classes/CountDown.html":{}}}],["contador",{"_index":172,"title":{},"body":{"index.html":{}}}],["contar",{"_index":170,"title":{},"body":{"index.html":{}}}],["contar.start().subscribe(data",{"_index":173,"title":{},"body":{"index.html":{}}}],["contract",{"_index":245,"title":{},"body":{"license.html":{}}}],["contruct",{"_index":23,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["convers",{"_index":123,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["convert",{"_index":79,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["copi",{"_index":201,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":188,"title":{},"body":{"license.html":{}}}],["correct",{"_index":148,"title":{},"body":{"miscellaneous/functions.html":{}}}],["count",{"_index":24,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["count(3",{"_index":171,"title":{},"body":{"index.html":{}}}],["countdown",{"_index":1,"title":{"classes/CountDown.html":{}},"body":{"classes/CountDown.html":{},"coverage.html":{},"index.html":{}}}],["countdowntim",{"_index":153,"title":{},"body":{"index.html":{}}}],["counter",{"_index":49,"title":{"classes/Counter.html":{}},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["counter.unsubscrib",{"_index":176,"title":{},"body":{"index.html":{}}}],["countlimit",{"_index":96,"title":{},"body":{"classes/Counter.html":{}}}],["coverag",{"_index":101,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["d",{"_index":42,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["d/h/m/",{"_index":151,"title":{},"body":{"miscellaneous/functions.html":{}}}],["damag",{"_index":241,"title":{},"body":{"license.html":{}}}],["data",{"_index":175,"title":{},"body":{"index.html":{}}}],["day_hour",{"_index":126,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["deal",{"_index":204,"title":{},"body":{"license.html":{}}}],["default",{"_index":53,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["defin",{"_index":21,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["depend",{"_index":116,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["descontar",{"_index":182,"title":{},"body":{"index.html":{}}}],["descontar.start().subscribe(data",{"_index":183,"title":{},"body":{"index.html":{}}}],["descontarnoclock",{"_index":184,"title":{},"body":{"index.html":{}}}],["descontarnoclock.start().subscribe(data",{"_index":185,"title":{},"body":{"index.html":{}}}],["descript",{"_index":6,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"miscellaneous/functions.html":{}}}],["determin",{"_index":39,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"miscellaneous/functions.html":{}}}],["digit",{"_index":144,"title":{},"body":{"miscellaneous/functions.html":{}}}],["discount",{"_index":8,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"miscellaneous/functions.html":{}}}],["distribut",{"_index":212,"title":{},"body":{"license.html":{}}}],["document",{"_index":102,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["down",{"_index":25,"title":{},"body":{"classes/CountDown.html":{},"miscellaneous/functions.html":{}}}],["enumer",{"_index":120,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["event",{"_index":236,"title":{},"body":{"license.html":{}}}],["exampl",{"_index":56,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["execut",{"_index":155,"title":{},"body":{"index.html":{}}}],["expect",{"_index":177,"title":{},"body":{"index.html":{}}}],["export",{"_index":82,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["express",{"_index":229,"title":{},"body":{"license.html":{}}}],["fals",{"_index":61,"title":{},"body":{"classes/CountDown.html":{},"index.html":{}}}],["file",{"_index":4,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"coverage.html":{},"license.html":{}}}],["finish",{"_index":68,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["finishintruct",{"_index":180,"title":{},"body":{"index.html":{}}}],["fit",{"_index":232,"title":{},"body":{"license.html":{}}}],["follow",{"_index":219,"title":{},"body":{"license.html":{}}}],["format",{"_index":36,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["free",{"_index":197,"title":{},"body":{"license.html":{}}}],["function",{"_index":106,"title":{"miscellaneous/functions.html":{}},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["furnish",{"_index":217,"title":{},"body":{"license.html":{}}}],["get",{"_index":152,"title":{"index.html":{},"license.html":{}},"body":{}}],["grant",{"_index":196,"title":{},"body":{"license.html":{}}}],["h",{"_index":43,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["herebi",{"_index":195,"title":{},"body":{"license.html":{}}}],["hh:mm:ss",{"_index":41,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["holder",{"_index":238,"title":{},"body":{"license.html":{}}}],["https://mugan86",{"_index":156,"title":{},"body":{"index.html":{}}}],["https://www.npmjs.com/package/mugan86",{"_index":159,"title":{},"body":{"index.html":{}}}],["identifi",{"_index":103,"title":{},"body":{"coverage.html":{}}}],["ignor",{"_index":83,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["impli",{"_index":230,"title":{},"body":{"license.html":{}}}],["import",{"_index":73,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["includ",{"_index":207,"title":{},"body":{"license.html":{}}}],["increment",{"_index":52,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":2,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"index.html":{}}}],["input",{"_index":146,"title":{},"body":{"miscellaneous/functions.html":{}}}],["instal",{"_index":162,"title":{},"body":{"index.html":{}}}],["instruct",{"_index":161,"title":{},"body":{"index.html":{}}}],["interv",{"_index":76,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["interval(interval_).pip",{"_index":85,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["interval_",{"_index":54,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["intruct",{"_index":165,"title":{},"body":{"index.html":{}}}],["kind",{"_index":228,"title":{},"body":{"license.html":{}}}],["ledo",{"_index":193,"title":{},"body":{"license.html":{}}}],["liabil",{"_index":242,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":239,"title":{},"body":{"license.html":{}}}],["lib/.../constants.t",{"_index":121,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lib/.../converter.t",{"_index":134,"title":{},"body":{"miscellaneous/functions.html":{}}}],["lib/constants.t",{"_index":122,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lib/converter.t",{"_index":105,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["lib/countdown.t",{"_index":5,"title":{},"body":{"classes/CountDown.html":{},"coverage.html":{}}}],["lib/countdown.ts:17",{"_index":22,"title":{},"body":{"classes/CountDown.html":{}}}],["lib/countdown.ts:46",{"_index":47,"title":{},"body":{"classes/CountDown.html":{}}}],["lib/counter.t",{"_index":90,"title":{},"body":{"classes/Counter.html":{},"coverage.html":{}}}],["lib/counter.ts:16",{"_index":92,"title":{},"body":{"classes/Counter.html":{}}}],["lib/counter.ts:37",{"_index":95,"title":{},"body":{"classes/Counter.html":{}}}],["librari",{"_index":154,"title":{},"body":{"index.html":{}}}],["licens",{"_index":186,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":51,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["limitvalu",{"_index":94,"title":{},"body":{"classes/Counter.html":{}}}],["m",{"_index":44,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["map",{"_index":80,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["map((x",{"_index":86,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["match",{"_index":89,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["max",{"_index":27,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["merchant",{"_index":231,"title":{},"body":{"license.html":{}}}],["merg",{"_index":210,"title":{},"body":{"license.html":{}}}],["method",{"_index":16,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["miscellan",{"_index":119,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mit",{"_index":187,"title":{},"body":{"license.html":{}}}],["modifi",{"_index":209,"title":{},"body":{"license.html":{}}}],["modul",{"_index":251,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["moment",{"_index":141,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ms_per_day",{"_index":131,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mugan86",{"_index":163,"title":{},"body":{"index.html":{}}}],["mugika",{"_index":192,"title":{},"body":{"license.html":{}}}],["n",{"_index":145,"title":{},"body":{"miscellaneous/functions.html":{}}}],["name",{"_index":31,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"miscellaneous/functions.html":{}}}],["new",{"_index":112,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["noninfring",{"_index":235,"title":{},"body":{"license.html":{}}}],["notic",{"_index":222,"title":{},"body":{"license.html":{}}}],["npm",{"_index":158,"title":{},"body":{"index.html":{}}}],["number",{"_index":9,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"miscellaneous/functions.html":{}}}],["numberformatclock",{"_index":110,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["numberformatclock(n",{"_index":142,"title":{},"body":{"miscellaneous/functions.html":{}}}],["obtain",{"_index":200,"title":{},"body":{"license.html":{}}}],["ok",{"_index":99,"title":{},"body":{"classes/Counter.html":{}}}],["one_day_second",{"_index":130,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["one_hour_second",{"_index":125,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["one_min_second",{"_index":128,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["one_second_in_m",{"_index":132,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["oper",{"_index":124,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["option",{"_index":33,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"miscellaneous/functions.html":{}}}],["otherwis",{"_index":247,"title":{},"body":{"license.html":{}}}],["out",{"_index":249,"title":{},"body":{"license.html":{}}}],["output",{"_index":35,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["overview",{"_index":252,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":115,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["param",{"_index":84,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["paramet",{"_index":29,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":233,"title":{},"body":{"license.html":{}}}],["permiss",{"_index":194,"title":{},"body":{"license.html":{}}}],["permit",{"_index":216,"title":{},"body":{"license.html":{}}}],["person",{"_index":199,"title":{},"body":{"license.html":{}}}],["portion",{"_index":225,"title":{},"body":{"license.html":{}}}],["properti",{"_index":14,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["provid",{"_index":226,"title":{},"body":{"license.html":{}}}],["publish",{"_index":211,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":234,"title":{},"body":{"license.html":{}}}],["require('mugan86",{"_index":168,"title":{},"body":{"index.html":{}}}],["restrict",{"_index":206,"title":{},"body":{"license.html":{}}}],["result",{"_index":88,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":37,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"miscellaneous/functions.html":{}}}],["right",{"_index":208,"title":{},"body":{"license.html":{}}}],["rxj",{"_index":117,"title":{},"body":{"dependencies.html":{}}}],["rxjs/internal/observable/interv",{"_index":77,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["rxjs/internal/operators/map",{"_index":81,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["s",{"_index":45,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["second",{"_index":48,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"miscellaneous/functions.html":{}}}],["secondsintimeformat",{"_index":78,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["secondsintimeformat(timeinsecond",{"_index":147,"title":{},"body":{"miscellaneous/functions.html":{}}}],["secondsintimeformat(x",{"_index":100,"title":{},"body":{"classes/Counter.html":{}}}],["select",{"_index":149,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sell",{"_index":215,"title":{},"body":{"license.html":{}}}],["set",{"_index":98,"title":{},"body":{"classes/Counter.html":{}}}],["shall",{"_index":223,"title":{},"body":{"license.html":{}}}],["show",{"_index":40,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["softwar",{"_index":202,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["specif",{"_index":10,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["specifi",{"_index":139,"title":{},"body":{"miscellaneous/functions.html":{}}}],["start",{"_index":17,"title":{"index.html":{},"license.html":{}},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["start(interval_",{"_index":46,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["startvalu",{"_index":34,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["statement",{"_index":104,"title":{},"body":{"coverage.html":{}}}],["subject",{"_index":218,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":213,"title":{},"body":{"license.html":{}}}],["substanti",{"_index":224,"title":{},"body":{"license.html":{}}}],["tabl",{"_index":114,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":113,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":150,"title":{},"body":{"miscellaneous/functions.html":{}}}],["this.clockformat",{"_index":60,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["this.valu",{"_index":58,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["time",{"_index":11,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"miscellaneous/functions.html":{}}}],["timeinsecond",{"_index":138,"title":{},"body":{"miscellaneous/functions.html":{}}}],["timer",{"_index":74,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["timer.one_second_in_m",{"_index":55,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["tort",{"_index":246,"title":{},"body":{"license.html":{}}}],["total",{"_index":140,"title":{},"body":{"miscellaneous/functions.html":{}}}],["true",{"_index":70,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"index.html":{}}}],["two",{"_index":143,"title":{},"body":{"miscellaneous/functions.html":{}}}],["type",{"_index":32,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["until",{"_index":50,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{}}}],["up",{"_index":93,"title":{},"body":{"classes/Counter.html":{},"miscellaneous/functions.html":{}}}],["us",{"_index":7,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{}}}],["valu",{"_index":28,"title":{},"body":{"classes/CountDown.html":{},"classes/Counter.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["warranti",{"_index":227,"title":{},"body":{"license.html":{}}}],["whether",{"_index":243,"title":{},"body":{"license.html":{}}}],["without",{"_index":205,"title":{},"body":{"license.html":{}}}],["x",{"_index":87,"title":{},"body":{"classes/CountDown.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/CountDown.html":{"url":"classes/CountDown.html","title":"class - CountDown","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CountDown\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/countdown.ts\n        \n\n            \n                Description\n            \n            \n                Use to discount number, from specific time to 0.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clockFormat\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                start\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(startValue: number, clockFormat: boolean)\n                    \n                \n                        \n                            \n                                Defined in lib/countdown.ts:17\n                            \n                        \n\n                \n                    \n                            Contruct count down and asign start max value to start discount\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        startValue\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Asign value to start discount time\n\n                                                        \n                                                \n                                                \n                                                        clockFormat\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                output format. Return with clock format or no\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clockFormat\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clockFormat:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in lib/countdown.ts:17\n                            \n                        \n\n                \n                    \n                        Determine if show with clock format (HH:MM:SS or d h m s)\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            start\n                            \n                            \n                        \n                    \n                \n                \n                    \nstart(interval_: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/countdown.ts:46\n                            \n                        \n\n\n                \n                    \n                            Time seconds counter until asign limit. Increment time values by second\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        interval_\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Timer.ONE_SECOND_IN_MS\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            1 EXAMPLE\nthis.value = 3.\nthis.clockFormat = false\nReturn:\n0d 0h 0m 3s\n0d 0h 0m 2s\n0d 0h 0m 1s\nFINISH\n2 EXAMPLE\nthis.value = 3.\nthis.clockFormat = true\nReturn:\n00:00:03\n00:00:02\nFINISH\n                                        \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Timer } from './constants';\nimport { interval } from \"rxjs/internal/observable/interval\";\nimport { secondsInTimeFormat } from \"./converter\";\nimport { map } from \"rxjs/internal/operators/map\";\n\n/**\n * Use to discount number, from specific time to 0.\n */\nexport class CountDown {\n    /**\n     * @ignore\n     */\n    value: number = -1;\n    /**\n     * Determine if show with clock format (HH:MM:SS or d h m s)\n     */\n    clockFormat: boolean;\n    /**\n     * Contruct count down and asign start max value to start discount\n     * @param startValue Asign value to start discount time\n     * @param clockFormat output format. Return with clock format or no\n     */\n    constructor(startValue: number, clockFormat: boolean = true) {\n        this.value = startValue;\n        this.clockFormat = clockFormat;\n    }\n    /**\n     * Time seconds counter until asign limit. Increment time values by second\n     * @example\n     * 1 EXAMPLE\n     * this.value = 3.\n     * this.clockFormat = false\n     * Return:\n     * 0d 0h 0m 3s\n     * 0d 0h 0m 2s\n     * 0d 0h 0m 1s\n     * FINISH\n     * 2 EXAMPLE\n     * this.value = 3.\n     * this.clockFormat = true\n     * Return:\n     * 00:00:03\n     * 00:00:02\n     * FINISH\n     */\n    start(interval_: number = Timer.ONE_SECOND_IN_MS) {\n        return interval(interval_).pipe(\n            map((x: number) => {\n                return secondsInTimeFormat( this.value - x , 2, 1, this.clockFormat);\n            })\n        );\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Counter.html":{"url":"classes/Counter.html","title":"class - Counter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Counter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/counter.ts\n        \n\n            \n                Description\n            \n            \n                Use to discount number, from specific time to 0.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clockFormat\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                start\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(limitValue: number, clockFormat: boolean)\n                    \n                \n                        \n                            \n                                Defined in lib/counter.ts:16\n                            \n                        \n\n                \n                    \n                            Contruct count up and asign finish limit max value to start count\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        limitValue\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        clockFormat\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                output format. Return with clock format or no\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clockFormat\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clockFormat:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in lib/counter.ts:16\n                            \n                        \n\n                \n                    \n                        Determine if show with clock format (HH:MM:SS or d h m s)\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            start\n                            \n                            \n                        \n                    \n                \n                \n                    \nstart(interval_: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/counter.ts:37\n                            \n                        \n\n\n                \n                    \n                            Time seconds counter until asign limit. Increment time values by second\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        interval_\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Timer.ONE_SECOND_IN_MS\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            countLimit = 3.\nReturn:\n0d 0h 0m 0s\n0d 0h 0m 1s\n0d 0h 0m 2s\nFINISH\n                                        \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { interval } from 'rxjs/internal/observable/interval';\nimport { map } from 'rxjs/internal/operators/map';\nimport { secondsInTimeFormat } from './converter';\nimport { Timer } from './constants';\n/**\n * Use to discount number, from specific time to 0.\n */\nexport class Counter {\n    /**\n     * @ignore\n     */\n    value: number = -1;\n    /**\n     * Determine if show with clock format (HH:MM:SS or d h m s)\n     */\n    clockFormat: boolean;\n    /**\n     * Contruct count up and asign finish limit max value to start count\n     * @param startValue Asign value to set limit value and ok to start count time\n     * @param clockFormat output format. Return with clock format or no\n     */\n    constructor(limitValue: number, clockFormat: boolean = true) {\n        this.value = limitValue;\n        this.clockFormat = clockFormat;\n    }\n    /**\n     * Time seconds counter until asign limit. Increment time values by second\n     * @example\n     * countLimit = 3.\n     * Return:\n     * 0d 0h 0m 0s\n     * 0d 0h 0m 1s\n     * 0d 0h 0m 2s\n     * FINISH\n     * @param countLimit Count only to until asign limit\n     */\n    start(interval_: number = Timer.ONE_SECOND_IN_MS) {\n        return interval(interval_).pipe(\n            map((x: number) => {\n                return secondsInTimeFormat(x, 1, this.value, this.clockFormat);\n            })\n        );\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                lib/converter.ts\n            \n            \n                function\n            \n            \n                checkTimerFinish\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/converter.ts\n            \n            \n                function\n            \n            \n                numberFormatClock\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/converter.ts\n            \n            \n                function\n            \n            \n                secondsInTimeFormat\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/countdown.ts\n            \n            \n                class\n            \n            \n                CountDown\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                lib/counter.ts\n            \n            \n                class\n            \n            \n                Counter\n            \n            \n                100 %\n                (4/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            rxjs : ^6.3.3\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Timer   (lib/.../constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    lib/constants.ts\n    \n        \n            \n                \n                    \n                        \n                        Timer\n                    \n                \n                    \n                        \n                            Timer constants to use in conversion and other operations\n\n                        \n                    \n                        \n                            \n                                 ONE_HOUR_SECONDS\n                            \n                        \n                        \n                            \n                                 DAY_HOURS\n                            \n                        \n                        \n                            \n                                Value : 24\n                            \n                        \n                        \n                            \n                                 ONE_MIN_SECONDS\n                            \n                        \n                        \n                            \n                                Value : 60\n                            \n                        \n                        \n                            \n                                 ONE_DAY_SECONDS\n                            \n                        \n                        \n                            \n                                 MS_PER_DAY\n                            \n                        \n                        \n                            \n                                 ONE_SECOND_IN_MS\n                            \n                        \n                        \n                            \n                                Value : 1000\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            checkTimerFinish   (lib/.../converter.ts)\n                        \n                        \n                            numberFormatClock   (lib/.../converter.ts)\n                        \n                        \n                            secondsInTimeFormat   (lib/.../converter.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    lib/converter.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            checkTimerFinish\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckTimerFinish(timeInSeconds, type, limit)\n                    \n                \n\n\n\n\n                \n                    \n                            Check if counter (count or discount) arrive to finish\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        timeInSeconds\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                time in number format to specify total seconds in this moment\n\n                                                        \n                                                \n                                                \n                                                        type\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                counter type - 1: Counter Up / 2: Counter Down\n\n                                                        \n                                                \n                                                \n                                                        limit\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Finish number\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numberFormatClock\n                            \n                            \n                        \n                    \n                \n                \n                    \nnumberFormatClock(n)\n                    \n                \n\n\n\n\n                \n                    \n                            Return value with two digits. If value is \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        n\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Input number to return with two digits\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            secondsInTimeFormat\n                            \n                            \n                        \n                    \n                \n                \n                    \nsecondsInTimeFormat(timeInSeconds, type, limit, clockFormat: boolean)\n                    \n                \n\n\n\n\n                \n                    \n                            Return in correct format to select clockFormat or no\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        timeInSeconds\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                time in number format to specify total seconds in this moment\n\n                                                        \n                                                \n                                                \n                                                        type\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                counter type - 1: Counter Up / 2: Counter Down\n\n                                                        \n                                                \n                                                \n                                                        limit\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Finish number\n\n                                                        \n                                                \n                                                \n                                                        clockFormat\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Determine if return format take clock or d/h/m/s\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCounter / CountdownTimer Library\n\n\n\n\n \nThis library use to execute count timer and countdown timer.\n\nDocumentation Info: https://mugan86-chronometer.firebaseapp.com/\nNPM Package: https://www.npmjs.com/package/mugan86-chronometer\n\nInstructions to install\nnpm install mugan86-chronometerIntructions to use\nIntructions to use Count Timer\nconst chrono = require('mugan86-chronometer');\nconst count = chrono.Counter;\n\n// With clock format\nconst contar = new count(3, true);\n\n// Contador\nlet counter = contar.start().subscribe(data => {\n    console.log(data);\n    if (data === 'FINISH') {\n        counter.unsubscribe();\n    }\n});\n\n// Expect results.\n00:00:00\n00:00:01\n00:00:02\nFINISH\n\n// With NOT clock format\nconst contar = new count(3, false);\n\n// Contador\nlet counter = contar.start().subscribe(data => {\n    console.log(data);\n    if (data === 'FINISH') {\n        counter.unsubscribe();\n    }\n});\n\n// Expect results.\n0d 0h 0m 0s\n0d 0h 0m 1s\n0d 0h 0m 2s\nFINISHIntructions to use Countdown Timer\nconst chrono = require('mugan86-chronometer');\nconst count = chrono.CountDown;\n\n// With clock format\nconst descontar = new count(3, true);\n\n// Countdown timer\nlet counter = descontar.start().subscribe(data => {\n    console.log(data);\n    if (data === 'FINISH') {\n        counter.unsubscribe();\n    }\n});\n\n// Expect results.\n00:00:03\n00:00:02\n00:00:01\nFINISH\n\n// With NOT clock format\nconst descontarNoClock = new count(3, false);\n\n// Counter\nlet counter = descontarNoClock.start().subscribe(data => {\n    console.log(data);\n    if (data === 'FINISH') {\n        counter.unsubscribe();\n    }\n});\n\n// Expect results.\n0d 0h 0m 3s\n0d 0h 0m 2s\n0d 0h 0m 1s\nFINISH\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Anartz Mugika Ledo\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
